{"version":3,"file":"backbone.validation.min.js","sources":["../src/utils.js","../src/options.js","../src/validators.js","../src/index.js"],"sourcesContent":["import _ from 'underscore'\r\n\r\n// Flattens an object\r\n// eg:\r\n//\r\n//     var o = {\r\n//       owner: {\r\n//         name: 'Backbone',\r\n//         address: {\r\n//           street: 'Street',\r\n//           zip: 1234\r\n//         }\r\n//       }\r\n//     };\r\n//\r\n// becomes:\r\n//\r\n//     var o = {\r\n//       'owner': {\r\n//         name: 'Backbone',\r\n//         address: {\r\n//           street: 'Street',\r\n//           zip: 1234\r\n//         }\r\n//       },\r\n//       'owner.name': 'Backbone',\r\n//       'owner.address': {\r\n//         street: 'Street',\r\n//         zip: 1234\r\n//       },\r\n//       'owner.address.street': 'Street',\r\n//       'owner.address.zip': 1234\r\n//     };\r\n// This may seem redundant, but it allows for maximum flexibility\r\n// in validation rules.\r\n\r\nvar flatten = function (obj, into, prefix) {\r\n  into = into || {};\r\n  prefix = prefix || '';\r\n\r\n  _.each(obj, function(val, key) {\r\n    if(obj.hasOwnProperty(key)) {\r\n      if (!!val && typeof val === 'object' && val.constructor === Object) {\r\n        flatten(val, into, prefix + key + '.');\r\n      }\r\n\r\n      // Register the current level object as well\r\n      into[prefix + key] = val;\r\n    }\r\n  });\r\n\r\n  return into;\r\n};\r\n\r\n// Determines whether or not a value is empty\r\nvar hasValue = function(value) {\r\n  return !(_.isNull(value) || _.isUndefined(value) || (_.isString(value) && trim(value) === '') || (_.isArray(value) && _.isEmpty(value)));\r\n};\r\n\r\n// Use native trim when defined\r\nvar trim = String.prototype.trim ?\r\n  function(text) {\r\n    return text.trim();\r\n  } :\r\n  function(text) {\r\n    var trimLeft = /^\\s+/,\r\n      trimRight = /\\s+$/;\r\n\r\n    return text.toString().replace(trimLeft, '').replace(trimRight, '');\r\n  };\r\n\r\nexport {flatten, hasValue}","// Default options\r\n// ---------------\r\n\r\nvar defaultOptions = {\r\n  forceUpdate: false,\r\n  selector: 'name',\r\n  labelFormatter: 'sentenceCase',\r\n  valid: Function.prototype,\r\n  invalid: Function.prototype\r\n};\r\n\r\n\r\nexport {defaultOptions};","import _ from 'underscore'\r\nimport {hasValue} from './utils'\r\nimport {defaultOptions} from './options';\r\n\r\n// Formatting functions used for formatting error messages\r\n\r\n// Uses the configured label formatter to format the attribute name\r\n// to make it more readable for the user\r\nfunction formatLabel(attrName, model) {\r\n  return defaultLabelFormatters[defaultOptions.labelFormatter](attrName, model);\r\n}\r\n\r\n// Replaces numeric placeholders like {0} in a string with arguments\r\n// passed to the function\r\nfunction format() {\r\n  var args = Array.prototype.slice.call(arguments),\r\n    text = args.shift();\r\n  return text.replace(/{(\\d+)}/g, function(match, number) {\r\n    return typeof args[number] !== 'undefined' ? args[number] : match;\r\n  });\r\n}\r\n\r\n// Label formatters\r\n// ----------------\r\n\r\n// Label formatters are used to convert the attribute name\r\n// to a more human friendly label when using the built in\r\n// error messages.\r\n// Configure which one to use with a call to\r\n//\r\n//     Backbone.Validation.configure({\r\n//       labelFormatter: 'label'\r\n//     });\r\nvar defaultLabelFormatters = {\r\n\r\n  // Returns the attribute name with applying any formatting\r\n  none: function(attrName) {\r\n    return attrName;\r\n  },\r\n\r\n  // Converts attributeName or attribute_name to Attribute name\r\n  sentenceCase: function(attrName) {\r\n    return attrName.replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(match, index) {\r\n      return index === 0 ? match.toUpperCase() : ' ' + match.toLowerCase();\r\n    }).replace(/_/g, ' ');\r\n  },\r\n\r\n  // Looks for a label configured on the model and returns it\r\n  //\r\n  //      var Model = Backbone.Model.extend({\r\n  //        validation: {\r\n  //          someAttribute: {\r\n  //            required: true\r\n  //          }\r\n  //        },\r\n  //\r\n  //        labels: {\r\n  //          someAttribute: 'Custom label'\r\n  //        }\r\n  //      });\r\n  label: function(attrName, model) {\r\n    return (model.labels && model.labels[attrName]) || defaultLabelFormatters.sentenceCase(attrName, model);\r\n  }\r\n};\r\n\r\n\r\n\r\n// Patterns\r\n// --------\r\n\r\nvar defaultPatterns = {\r\n  // Matches any digit(s) (i.e. 0-9)\r\n  digits: /^\\d+$/,\r\n\r\n  // Matches any number (e.g. 100.000)\r\n  number: /^-?(?:\\d+|\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d*)?$/,\r\n\r\n  // Matches a valid email address (e.g. mail@example.com)\r\n  email: /^((([a-z]|\\d|[\\[\\]()!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[\\[\\]()!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i,\r\n\r\n  // Mathes any valid url (e.g. http://www.xample.com)\r\n  url: /^(https?|ftp):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i\r\n};\r\n\r\n\r\n// Error messages\r\n// --------------\r\n\r\n// Error message for the build in validators.\r\n// {x} gets swapped out with arguments from the validator.\r\nvar defaultMessages = {\r\n  required: '{0} is required',\r\n  acceptance: '{0} must be accepted',\r\n  min: '{0} must be greater than or equal to {1}',\r\n  max: '{0} must be less than or equal to {1}',\r\n  range: '{0} must be between {1} and {2}',\r\n  length: '{0} must be {1} characters',\r\n  minLength: '{0} must be at least {1} characters',\r\n  maxLength: '{0} must be at most {1} characters',\r\n  rangeLength: '{0} must be between {1} and {2} characters',\r\n  oneOf: '{0} must be one of: {1}',\r\n  equalTo: '{0} must be the same as {1}',\r\n  digits: '{0} must only contain digits',\r\n  number: '{0} must be a number',\r\n  email: '{0} must be a valid email',\r\n  url: '{0} must be a valid url',\r\n  inlinePattern: '{0} is invalid'\r\n};\r\n\r\n// Built in validators\r\n// -------------------\r\n\r\n// Determines whether or not a value is a number\r\nvar isNumber = function(value){\r\n  return _.isNumber(value) || (_.isString(value) && value.match(defaultPatterns.number));\r\n};\r\n\r\nvar defaultValidators =  {\r\n  // Function validator\r\n  // Lets you implement a custom function used for validation\r\n  fn: function(value, attr, fn, model, computed) {\r\n    if(_.isString(fn)){\r\n      fn = model[fn];\r\n    }\r\n    return fn.call(model, value, attr, computed);\r\n  },\r\n\r\n  // Required validator\r\n  // Validates if the attribute is required or not\r\n  // This can be specified as either a boolean value or a function that returns a boolean value\r\n  required: function(value, attr, required, model, computed) {\r\n    var isRequired = _.isFunction(required) ? required.call(model, value, attr, computed) : required;\r\n    if(!isRequired && !hasValue(value)) {\r\n      return false; // overrides all other validators\r\n    }\r\n    if (isRequired && !hasValue(value)) {\r\n      return this.format(defaultMessages.required, this.formatLabel(attr, model));\r\n    }\r\n  },\r\n\r\n  // Acceptance validator\r\n  // Validates that something has to be accepted, e.g. terms of use\r\n  // `true` or 'true' are valid\r\n  acceptance: function(value, attr, accept, model) {\r\n    if(value !== 'true' && (!_.isBoolean(value) || value === false)) {\r\n      return this.format(defaultMessages.acceptance, this.formatLabel(attr, model));\r\n    }\r\n  },\r\n\r\n  // Min validator\r\n  // Validates that the value has to be a number and equal to or greater than\r\n  // the min value specified\r\n  min: function(value, attr, minValue, model) {\r\n    if (!isNumber(value) || value < minValue) {\r\n      return this.format(defaultMessages.min, this.formatLabel(attr, model), minValue);\r\n    }\r\n  },\r\n\r\n  // Max validator\r\n  // Validates that the value has to be a number and equal to or less than\r\n  // the max value specified\r\n  max: function(value, attr, maxValue, model) {\r\n    if (!isNumber(value) || value > maxValue) {\r\n      return this.format(defaultMessages.max, this.formatLabel(attr, model), maxValue);\r\n    }\r\n  },\r\n\r\n  // Range validator\r\n  // Validates that the value has to be a number and equal to or between\r\n  // the two numbers specified\r\n  range: function(value, attr, range, model) {\r\n    if(!isNumber(value) || value < range[0] || value > range[1]) {\r\n      return this.format(defaultMessages.range, this.formatLabel(attr, model), range[0], range[1]);\r\n    }\r\n  },\r\n\r\n  // Length validator\r\n  // Validates that the value has to be a string with length equal to\r\n  // the length value specified\r\n  length: function(value, attr, length, model) {\r\n    if (!_.isString(value) || value.length !== length) {\r\n      return this.format(defaultMessages.length, this.formatLabel(attr, model), length);\r\n    }\r\n  },\r\n\r\n  // Min length validator\r\n  // Validates that the value has to be a string with length equal to or greater than\r\n  // the min length value specified\r\n  minLength: function(value, attr, minLength, model) {\r\n    if (!_.isString(value) || value.length < minLength) {\r\n      return this.format(defaultMessages.minLength, this.formatLabel(attr, model), minLength);\r\n    }\r\n  },\r\n\r\n  // Max length validator\r\n  // Validates that the value has to be a string with length equal to or less than\r\n  // the max length value specified\r\n  maxLength: function(value, attr, maxLength, model) {\r\n    if (!_.isString(value) || value.length > maxLength) {\r\n      return this.format(defaultMessages.maxLength, this.formatLabel(attr, model), maxLength);\r\n    }\r\n  },\r\n\r\n  // Range length validator\r\n  // Validates that the value has to be a string and equal to or between\r\n  // the two numbers specified\r\n  rangeLength: function(value, attr, range, model) {\r\n    if (!_.isString(value) || value.length < range[0] || value.length > range[1]) {\r\n      return this.format(defaultMessages.rangeLength, this.formatLabel(attr, model), range[0], range[1]);\r\n    }\r\n  },\r\n\r\n  // One of validator\r\n  // Validates that the value has to be equal to one of the elements in\r\n  // the specified array. Case sensitive matching\r\n  oneOf: function(value, attr, values, model) {\r\n    if(!_.include(values, value)){\r\n      return this.format(defaultMessages.oneOf, this.formatLabel(attr, model), values.join(', '));\r\n    }\r\n  },\r\n\r\n  // Equal to validator\r\n  // Validates that the value has to be equal to the value of the attribute\r\n  // with the name specified\r\n  equalTo: function(value, attr, equalTo, model, computed) {\r\n    if(value !== computed[equalTo]) {\r\n      return this.format(defaultMessages.equalTo, this.formatLabel(attr, model), this.formatLabel(equalTo, model));\r\n    }\r\n  },\r\n\r\n  // Pattern validator\r\n  // Validates that the value has to match the pattern specified.\r\n  // Can be a regular expression or the name of one of the built in patterns\r\n  pattern: function(value, attr, pattern, model) {\r\n    if (!hasValue(value) || !value.toString().match(defaultPatterns[pattern] || pattern)) {\r\n      return this.format(defaultMessages[pattern] || defaultMessages.inlinePattern, this.formatLabel(attr, model), pattern);\r\n    }\r\n  }\r\n};\r\n\r\n// Set helper functions using Object.defineProperty (non writable, configurable or enumerable)\r\nObject.defineProperty(defaultValidators, 'format', {value: format})\r\nObject.defineProperty(defaultValidators, 'formatLabel', {value: formatLabel})\r\n\r\n\r\nexport {defaultMessages, defaultPatterns, defaultValidators, defaultLabelFormatters}","import Backbone from 'backbone';\r\nimport _ from 'underscore';\r\nimport {flatten} from './utils';\r\nimport {defaultOptions} from './options';\r\nimport {defaultMessages, defaultPatterns, defaultValidators, defaultLabelFormatters} from './validators';\r\n\r\n\r\n\r\n// Helper functions\r\n// ----------------\r\n\r\n// Returns an object with undefined properties for all\r\n// attributes on the model that has defined one or more\r\n// validation rules.\r\nvar getValidatedAttrs = function(model, attrs) {\r\n  attrs = attrs || _.keys(_.result(model, 'validation') || {});\r\n  return _.reduce(attrs, function(memo, key) {\r\n    memo[key] = void 0;\r\n    return memo;\r\n  }, {});\r\n};\r\n\r\n// Returns an array with attributes passed through options\r\nvar getOptionsAttrs = function(options, view) {\r\n  var attrs = options.attributes;\r\n  if (_.isFunction(attrs)) {\r\n    attrs = attrs(view);\r\n  } else if (_.isString(attrs) && (_.isFunction(defaultAttributeLoaders[attrs]))) {\r\n    attrs = defaultAttributeLoaders[attrs](view);\r\n  }\r\n  if (_.isArray(attrs)) {\r\n    return attrs;\r\n  }\r\n};\r\n\r\n\r\n// Looks on the model for validations for a specified\r\n// attribute. Returns an array of any validators defined,\r\n// or an empty array if none is defined.\r\nvar getValidators = function(model, attr) {\r\n  var attrValidationSet = model.validation ? _.result(model, 'validation')[attr] || {} : {};\r\n\r\n  // Stick the validator object into an array\r\n  if(!_.isArray(attrValidationSet)) {\r\n    attrValidationSet = [attrValidationSet];\r\n  }\r\n\r\n  // Reduces the array of validators into a new array with objects\r\n  // with a validation method to call, the value to validate against\r\n  // and the specified error message, if any\r\n  return _.reduce(attrValidationSet, function(memo, attrValidation) {\r\n\r\n    // If the validator is a function or a string, wrap it in a function validator\r\n    if (_.isFunction(attrValidation) || _.isString(attrValidation)) {\r\n      attrValidation = {\r\n        fn: attrValidation\r\n      };\r\n    }\r\n\r\n    _.each(_.keys(attrValidation), function(validator) {\r\n      if (validator === 'msg') return;\r\n      memo.push({\r\n        fn: defaultValidators[validator],\r\n        val: attrValidation[validator],\r\n        msg: attrValidation.msg\r\n      });\r\n    });\r\n    return memo;\r\n  }, []);\r\n};\r\n\r\n// Validates an attribute against all validators defined\r\n// for that attribute. If one or more errors are found,\r\n// the first error message is returned.\r\n// If the attribute is valid, an empty string is returned.\r\nvar validateAttr = function(model, attr, value, computed) {\r\n  // Reduces the array of validators to an error message by\r\n  // applying all the validators and returning the first error\r\n  // message, if any.\r\n  return _.reduce(getValidators(model, attr), function(memo, validator){\r\n    var result = validator.fn.call(defaultValidators, value, attr, validator.val, model, computed);\r\n\r\n    if(result === false || memo === false) {\r\n      return false;\r\n    }\r\n    if (result && !memo) {\r\n      return _.result(validator, 'msg') || result;\r\n    }\r\n    return memo;\r\n  }, '');\r\n};\r\n\r\n// Loops through the model's attributes and validates the specified attrs.\r\n// Returns and object containing names of invalid attributes\r\n// as well as error messages.\r\nvar validateModel = function(model, allAttrs, validatedAttrs) {\r\n  var error,\r\n      invalidAttrs = {},\r\n      isValid = true;\r\n\r\n  _.each(validatedAttrs, function(val, attr) {\r\n    error = validateAttr(model, attr, val, allAttrs);\r\n    if (error) {\r\n      invalidAttrs[attr] = error;\r\n      isValid = false;\r\n    }\r\n  });\r\n\r\n  return {\r\n    invalidAttrs: invalidAttrs,\r\n    isValid: isValid\r\n  };\r\n};\r\n\r\n// Contains the methods that are mixed in on the model when binding\r\nvar mixin = function(view, options) {\r\n  return {\r\n\r\n    // Check whether or not a value, or a hash of values\r\n    // passes validation without updating the model\r\n    preValidate: function(attr, value) {\r\n      var self = this,\r\n          result = {},\r\n          error,\r\n          allAttrs = _.extend({}, this.attributes);\r\n\r\n      if(_.isObject(attr)){\r\n        // if multiple attributes are passed at once we would like for the validation functions to\r\n        // have access to the fresh values sent for all attributes, in the same way they do in the\r\n        // regular validation\r\n        _.extend(allAttrs, attr);\r\n\r\n        _.each(attr, function(value, attrKey) {\r\n          error = validateAttr(self, attrKey, value, allAttrs);\r\n          if(error){\r\n            result[attrKey] = error;\r\n          }\r\n        });\r\n\r\n        return _.isEmpty(result) ? undefined : result;\r\n      }\r\n      else {\r\n        return validateAttr(this, attr, value, allAttrs);\r\n      }\r\n    },\r\n\r\n    // Check to see if an attribute, an array of attributes or the\r\n    // entire model is valid. Passing true will force a validation\r\n    // of the model.\r\n    isValid: function(option) {\r\n      var self = this, flattened, attrs, error, invalidAttrs;\r\n\r\n      option = option || getOptionsAttrs(options, view);\r\n\r\n      if(_.isString(option)){\r\n        attrs = [option];\r\n      } else if(_.isArray(option)) {\r\n        attrs = option;\r\n      }\r\n      if (attrs) {\r\n        flattened = flatten(self.attributes);\r\n        //Loop through all attributes and mark attributes invalid if appropriate\r\n        _.each(attrs, function (attr) {\r\n          error = validateAttr(self, attr, flattened[attr], _.extend({}, self.attributes));\r\n          if (error) {\r\n              invalidAttrs = invalidAttrs || {};\r\n              invalidAttrs[attr] = error;\r\n          }\r\n          //trigger valid/invalid events for each associated view\r\n          _.each(self.associatedViews, function(view) {\r\n            if (error) {\r\n              options.invalid(view, attr, error, options.selector, self);\r\n            } else {\r\n              options.valid(view, attr, options.selector, self);\r\n            }\r\n          });\r\n        });\r\n      }\r\n\r\n      if(option === true) {\r\n        invalidAttrs = this.validate();\r\n      }\r\n      if (invalidAttrs) {\r\n        this.trigger('invalid', this, invalidAttrs, {validationError: invalidAttrs});\r\n      }\r\n      return attrs ? !invalidAttrs : this.validation ? this._isValid : true;\r\n    },\r\n\r\n    // This is called by Backbone when it needs to perform validation.\r\n    // You can call it manually without any parameters to validate the\r\n    // entire model.\r\n    validate: function(attrs, setOptions){\r\n      var model = this,\r\n          validateAll = !attrs,\r\n          opt = _.extend({}, options, setOptions),\r\n          validatedAttrs = getValidatedAttrs(model, getOptionsAttrs(options, view)),\r\n          allAttrs = _.extend({}, validatedAttrs, model.attributes, attrs),\r\n          flattened = flatten(allAttrs),\r\n          changedAttrs = attrs ? flatten(attrs) : flattened,\r\n          result = validateModel(model, allAttrs, _.pick(flattened, _.keys(validatedAttrs)));\r\n\r\n      model._isValid = result.isValid;\r\n\r\n      //After validation is performed, loop through all associated views\r\n      _.each(model.associatedViews, function(view){\r\n\r\n        // After validation is performed, loop through all validated and changed attributes\r\n        // and call the valid and invalid callbacks so the view is updated.\r\n        _.each(validatedAttrs, function(val, attr){\r\n            var invalid = result.invalidAttrs.hasOwnProperty(attr),\r\n              changed = changedAttrs.hasOwnProperty(attr);\r\n\r\n            if(!invalid){\r\n              opt.valid(view, attr, opt.selector, model);\r\n            }\r\n            if(invalid && (changed || validateAll)){\r\n              opt.invalid(view, attr, result.invalidAttrs[attr], opt.selector, model);\r\n            }\r\n        });\r\n      });\r\n\r\n      // Trigger validated events.\r\n      // Need to defer this so the model is actually updated before\r\n      // the event is triggered.\r\n      _.defer(function() {\r\n        model.trigger('validated', model._isValid, model, result.invalidAttrs);\r\n        model.trigger('validated:' + (model._isValid ? 'valid' : 'invalid'), model, result.invalidAttrs);\r\n      });\r\n\r\n      // Return any error messages to Backbone, unless the forceUpdate flag is set.\r\n      // Then we do not return anything and fools Backbone to believe the validation was\r\n      // a success. That way Backbone will update the model regardless.\r\n      if (!opt.forceUpdate && _.intersection(_.keys(result.invalidAttrs), _.keys(changedAttrs)).length > 0) {\r\n        return result.invalidAttrs;\r\n      }\r\n    }\r\n  };\r\n};\r\n\r\n// Helper to mix in validation on a model. Stores the view in the associated views array.\r\nvar bindModel = function(view, model, options) {\r\n  if (model.associatedViews) {\r\n    model.associatedViews.push(view);\r\n  } else {\r\n    model.associatedViews = [view];\r\n  }\r\n  _.extend(model, mixin(view, options));\r\n};\r\n\r\n// Removes view from associated views of the model or the methods\r\n// added to a model if no view or single view provided\r\nvar unbindModel = function(model, view) {\r\n  if (view && model.associatedViews && model.associatedViews.length > 1){\r\n    model.associatedViews = _.without(model.associatedViews, view);\r\n  } else {\r\n    delete model.validate;\r\n    delete model.preValidate;\r\n    delete model.isValid;\r\n    delete model.associatedViews;\r\n  }\r\n};\r\n\r\n// Mix in validation on a model whenever a model is\r\n// added to a collection\r\nvar collectionAdd = function(model) {\r\n  bindModel(this.view, model, this.options);\r\n};\r\n\r\n// Remove validation from a model whenever a model is\r\n// removed from a collection\r\nvar collectionRemove = function(model) {\r\n  unbindModel(model);\r\n};\r\n\r\n// Public interface\r\nvar Validation =  {\r\n\r\n  // Current version of the library\r\n  version: '{{version}}',\r\n\r\n  // Called to configure the default options\r\n  configure: function(options) {\r\n    _.extend(defaultOptions, options);\r\n  },\r\n\r\n  // Hooks up validation on a view with a model\r\n  // or collection\r\n  bind: function(view, options) {\r\n    options = _.extend({}, defaultOptions, defaultCallbacks, options);\r\n\r\n    var model = options.model || view.model,\r\n        collection = options.collection || view.collection;\r\n\r\n    if(typeof model === 'undefined' && typeof collection === 'undefined'){\r\n      throw 'Before you execute the binding your view must have a model or a collection.\\n' +\r\n            'See http://thedersen.com/projects/backbone-validation/#using-form-model-validation for more information.';\r\n    }\r\n\r\n    if(model) {\r\n      bindModel(view, model, options);\r\n    }\r\n    else if(collection) {\r\n      collection.each(function(model){\r\n        bindModel(view, model, options);\r\n      });\r\n      collection.bind('add', collectionAdd, {view: view, options: options});\r\n      collection.bind('remove', collectionRemove);\r\n    }\r\n  },\r\n\r\n  // Removes validation from a view with a model\r\n  // or collection\r\n  unbind: function(view, options) {\r\n    options = _.extend({}, options);\r\n    var model = options.model || view.model,\r\n        collection = options.collection || view.collection;\r\n\r\n    if(model) {\r\n      unbindModel(model, view);\r\n    }\r\n    else if(collection) {\r\n      collection.each(function(model){\r\n        unbindModel(model, view);\r\n      });\r\n      collection.unbind('add', collectionAdd);\r\n      collection.unbind('remove', collectionRemove);\r\n    }\r\n  },\r\n\r\n  // Used to extend the Backbone.Model.prototype\r\n  // with validation\r\n  mixin: mixin(null, defaultOptions)\r\n};\r\n\r\n\r\n\r\n// Callbacks\r\n// ---------\r\n\r\nvar defaultCallbacks = Validation.callbacks = {\r\n\r\n  // Gets called when a previously invalid field in the\r\n  // view becomes valid. Removes any error message.\r\n  // Should be overridden with custom functionality.\r\n  valid: function(view, attr, selector) {\r\n    view.$('[' + selector + '~=\"' + attr + '\"]')\r\n        .removeClass('invalid')\r\n        .removeAttr('data-error');\r\n  },\r\n\r\n  // Gets called when a field in the view becomes invalid.\r\n  // Adds a error message.\r\n  // Should be overridden with custom functionality.\r\n  invalid: function(view, attr, error, selector) {\r\n    view.$('[' + selector + '~=\"' + attr + '\"]')\r\n        .addClass('invalid')\r\n        .attr('data-error', error);\r\n  }\r\n};\r\n\r\n// AttributeLoaders\r\n\r\nvar defaultAttributeLoaders = Validation.attributeLoaders = {\r\n  inputNames: function (view) {\r\n    var attrs = [];\r\n    if (view) {\r\n      view.$('form [name]').each(function () {\r\n        if (/^(?:input|select|textarea)$/i.test(this.nodeName) && this.name &&\r\n          this.type !== 'submit' && attrs.indexOf(this.name) === -1) {\r\n          attrs.push(this.name);\r\n        }\r\n      });\r\n    }\r\n    return attrs;\r\n  }\r\n};\r\n\r\nValidation.labelFormatters = defaultLabelFormatters;\r\nValidation.messages = defaultMessages;\r\nValidation.validators = defaultValidators;\r\nValidation.patterns = defaultPatterns;\r\n\r\nBackbone.Validation = Validation\r\n\r\nexport default Validation\r\n\r\n"],"names":["flatten","obj","into","prefix","_","each","val","key","hasOwnProperty","constructor","Object","hasValue","value","isNull","isUndefined","isString","trim","isArray","isEmpty","String","prototype","text","toString","replace","defaultOptions","forceUpdate","selector","labelFormatter","valid","Function","invalid","defaultLabelFormatters","none","attrName","sentenceCase","match","index","toUpperCase","toLowerCase","label","model","labels","defaultPatterns","digits","number","email","url","defaultMessages","required","acceptance","min","max","range","length","minLength","maxLength","rangeLength","oneOf","equalTo","inlinePattern","isNumber","defaultValidators","fn","attr","computed","call","isRequired","isFunction","this","format","formatLabel","accept","isBoolean","minValue","maxValue","values","include","join","pattern","defineProperty","args","Array","slice","arguments","shift","getOptionsAttrs","options","view","attrs","attributes","defaultAttributeLoaders","validateAttr","reduce","attrValidationSet","validation","result","memo","attrValidation","keys","validator","push","msg","getValidators","mixin","preValidate","error","self","allAttrs","extend","isObject","attrKey","undefined","isValid","option","flattened","invalidAttrs","associatedViews","validate","trigger","validationError","_isValid","setOptions","validateAll","opt","validatedAttrs","getValidatedAttrs","changedAttrs","validateModel","pick","changed","defer","intersection","bindModel","unbindModel","without","collectionAdd","collectionRemove","Validation","version","configure","bind","defaultCallbacks","collection","unbind","callbacks","$","removeClass","removeAttr","addClass","attributeLoaders","inputNames","test","nodeName","name","type","indexOf","labelFormatters","messages","validators","patterns","Backbone"],"mappings":"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"}